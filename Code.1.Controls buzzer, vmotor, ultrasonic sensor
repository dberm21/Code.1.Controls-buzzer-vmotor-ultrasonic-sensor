//Define pins
const int trigPin = 9;
const int echoPin = 10;
const int buzzer = 8;
const int mvmotor = 13;

// Define variables
long duration;
int distance;
int safetyDistance;

void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as Output
  pinMode(echoPin, INPUT); // Sets the echoPin as Input
  pinMode(buzzer, OUTPUT); // Sets the buzzPin as Output
  pinMode(mvmotor, OUTPUT); // Sets the motorPin as Output
  Serial.begin(9600); // Begins serial communication
}

void loop() {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);

  // Sets the trigPin HIGH after 5 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(trigPin, LOW);

  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);

  // Calculating the distance (cm)
  distance = duration * 0.034 / 2;


  safetyDistance = distance;
  if (distance <= 12) {      // If distance is less than or equal to 12cm
    digitalWrite(buzzer, HIGH);  // buzzer will turn on
    digitalWrite(mvmotor, HIGH);  // mvmotor will turn on
    delay(50);                // wait 1/20 of a second
    digitalWrite(buzzer, LOW);   // buzzer will turn off
    digitalWrite(mvmotor, LOW);   // mvmotor will turn off
    delay(100);               // wait 1/10 of a second
  }

  else if ( 12 < distance && distance <= 22) { // If distance is less than or equal to 22cm but greater than 12cm
    digitalWrite(buzzer, HIGH);
    digitalWrite(mvmotor, HIGH);
    delay(85);
    digitalWrite(buzzer, LOW);
    digitalWrite(mvmotor, LOW);
    delay(360);
  }

  else if ( 22 < distance && distance <= 30) { // If distance is less than or equal to 30cm but greater than 22cm
    digitalWrite(buzzer, HIGH);
    digitalWrite(mvmotor, HIGH);
    delay(110);
    digitalWrite(buzzer, LOW);
    digitalWrite(mvmotor, LOW);
    delay(570);
  }

  else if ( 30 < distance && distance <= 60) { // If distance is less than or equal to 60cm but greater than 30cm
    digitalWrite(buzzer, HIGH);
    digitalWrite(mvmotor, HIGH);
    delay(120);
    digitalWrite(buzzer, LOW);
    digitalWrite(mvmotor, LOW);
    delay(700);
  }

  else if ( 60 < distance && distance <= 100 ) { // If distance is less than or equal to 100cm but greater than 60cm
    digitalWrite(buzzer, HIGH);
    digitalWrite(mvmotor, HIGH);
    delay(180);
    digitalWrite(buzzer, LOW);
    digitalWrite(mvmotor, LOW);
    delay(1500);
  }

  else if ( distance > 100 ) { // If distance is greater than 100cm
    digitalWrite(buzzer, LOW);
    digitalWrite(mvmotor, LOW);
  }                             // Both the buzzer and mvmotor turn off


  // Displays the distance on the Serial Monitor
  Serial.print("Distance: ");
  Serial.println(distance);
}
